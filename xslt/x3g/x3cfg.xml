<xsl:stylesheet 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:jpw="http://www.jpw.com/product/app"
    version="2.0">

    <xsl:output method="xml" indent="yes"/>
    <xsl:strip-space elements="*"/>

    <xsl:variable name="newline"><xsl:text>
</xsl:text></xsl:variable>

    <xsl:template match="/">
        <xsl:apply-templates/>
    </xsl:template>

    <xsl:template match="/x3gpp">
        <x3gpp name="{@name}">
            <xsl:attribute name="site" select="@site"/>
            <xsl:attribute name="ftp" select="@ftp"/>
            <xsl:for-each-group select="spec" group-by="@year">
                <xsl:sort select="@year" order="descending"/>
                <xsl:for-each-group select="current-group()" group-by="@major">
                    <xsl:apply-templates/>
                </xsl:for-each-group>
             </xsl:for-each-group>
        </x3gpp>
    </xsl:template>

    <xsl:template match="spec">
       <spc name="test">
       </spc>
    </xsl:template>

    <xsl:template match="*"/>

<xsl:function name="jpw:substring-before-last">
    <xsl:param name="input" as="xs:string"/>
    <xsl:param name="substr" as="xs:string"/>
    <xsl:sequence 
       select="if ($substr) 
               then 
                  if (contains($input, $substr)) then 
                  string-join(tokenize($input, $substr)
                    [position( ) ne last( )],$substr) 
                  else ''
               else $input"/>
</xsl:function>

<xsl:function name="jpw:substring-after-last">
    <xsl:param name="input" as="xs:string"/>
    <xsl:param name="substr" as="xs:string"/>
    <xsl:sequence 
    select="if ($substr) 
            then
               if (contains($input, $substr))
               then tokenize($input, $substr)[last( )] 
               else '' 
            else $input"/>
</xsl:function>

</xsl:stylesheet>
