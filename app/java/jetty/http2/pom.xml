<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.jpw.app</groupId>
  <artifactId>jhttp</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>jhttp</name>
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <jetty.version>9.4.31.v20200723</jetty.version>
    <slf4j.version>1.7.30</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <alpn.boot.version>8.1.13.v20181017</alpn.boot.version>
  </properties>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.eclipse.jetty.aggregate/jetty-all -->
    <!-- http2:jetty-servlets,jetty-servlet,jetty-alpn-server,http2-server  -->
    <dependency>
      <groupId>org.eclipse.jetty.aggregate</groupId>
      <artifactId>jetty-all</artifactId>
      <version>${jetty.version}</version>
      <type>pom</type>
    </dependency>
    <!-- 
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-client</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-openjdk8-client</artifactId>
      <version>${jetty.version}</version>
    </dependency>
     -->

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-openjdk8-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
       <groupId>org.mortbay.jetty.alpn</groupId>
       <artifactId>alpn-boot</artifactId>
       <version>${alpn.boot.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

  </dependencies>

  <build>
  <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
     
     <!--  
     The Xbootclasspath can only be set on JVM startup, cannot be set after the JVM is initialized.
     The exec-maven-plugin configuration must use "exec:exec", not "exec:java".
     --> 
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
      <version>3.0.0</version>
      <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-Xbootclasspath/p:${settings.localRepository}/org/mortbay/jetty/alpn/alpn-boot/${alpn.boot.version}/alpn-boot-${alpn.boot.version}.jar</argument>
            <argument>-classpath</argument>
            <classpath/>  
            <!-- automatically creates the classpath using all project dependencies,
                 also adding the project build directory  -->
            <!--  
            <classpath>
              <dependency>commons-io:commons-io</dependency>
              <dependency>commons-lang:commons-lang</dependency>
            </classpath>
             -->
            <argument>com.jpw.app.App</argument>
          </arguments>
        </configuration>
    </plugin>

  </plugins>
  </build>
</project>
